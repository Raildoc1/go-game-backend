// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: queries.sql

package sqlc

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const getPlayer = `-- name: GetPlayer :one
SELECT user_id, nickname FROM players WHERE user_id = $1
`

func (q *Queries) GetPlayer(ctx context.Context, userID int64) (Player, error) {
	row := q.db.QueryRow(ctx, getPlayer, userID)
	var i Player
	err := row.Scan(&i.UserID, &i.Nickname)
	return i, err
}

const upsertPlayer = `-- name: UpsertPlayer :exec
INSERT INTO players (user_id, nickname) VALUES ($1, $2)
ON CONFLICT (user_id) DO UPDATE SET nickname=COALESCE(players.nickname, EXCLUDED.nickname)
`

type UpsertPlayerParams struct {
	UserID   int64
	Nickname pgtype.Text
}

func (q *Queries) UpsertPlayer(ctx context.Context, arg UpsertPlayerParams) error {
	_, err := q.db.Exec(ctx, upsertPlayer, arg.UserID, arg.Nickname)
	return err
}
